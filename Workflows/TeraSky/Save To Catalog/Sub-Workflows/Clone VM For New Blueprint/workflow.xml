<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item5" object-name="workflow:name=generic" id="117f44f1-7ab2-4eee-b1f9-7e63f022fc7b" editor-version="2.0" version="0.0.0" api-version="6.0.0" restartMode="1" resumeFromFailedMode="0">
    <display-name>Clone VM For New Blueprint</display-name>
    <position y="10.0" x="50.0"/>
    <input>
        <param name="vmFolder" type="VC:VmFolder">
            <description>the VM Folder to create the new VM in</description>
        </param>
        <param name="newVmName" type="string">
            <description>the name of the VM to be created</description>
        </param>
        <param name="sourceVmUuid" type="string">
            <description>the UUID of the source VM to help find it in the VC inventory</description>
        </param>
        <param name="snapshotName" type="string">
            <description>snapshot name for linked clone purposes to be created on the cloned VM</description>
        </param>
    </input>
    <output/>
    <attrib name="vm" type="VC:VirtualMachine">
        <value encoded="n"/>
    </attrib>
    <attrib name="powerOn" type="boolean">
        <value encoded="n">false</value>
    </attrib>
    <attrib name="template" type="boolean">
        <value encoded="n">false</value>
    </attrib>
    <attrib name="datastore" type="VC:Datastore">
        <value encoded="n"/>
    </attrib>
    <attrib name="host" type="VC:HostSystem">
        <value encoded="n"/>
    </attrib>
    <attrib name="pool" type="VC:ResourcePool">
        <value encoded="n"/>
    </attrib>
    <attrib name="thinProvisioned" type="boolean">
        <value encoded="n">true</value>
    </attrib>
    <attrib name="cloneTask" type="VC:Task">
        <value encoded="n"/>
    </attrib>
    <attrib name="sleepTime" type="number">
        <value encoded="n">30.0</value>
    </attrib>
    <attrib name="newVM" type="VC:VirtualMachine">
        <value encoded="n"/>
    </attrib>
    <attrib name="progress" type="boolean">
        <value encoded="n">true</value>
    </attrib>
    <attrib name="pollRate" type="number">
        <value encoded="n">10.0</value>
    </attrib>
    <attrib name="description" type="string">
        <value encoded="n">snapshot created via save to catalog automation</value>
    </attrib>
    <attrib name="memory" type="boolean">
        <value encoded="n">false</value>
    </attrib>
    <attrib name="quiesce" type="boolean">
        <value encoded="n">false</value>
    </attrib>
    <attrib name="snapshot" type="VC:VirtualMachineSnapshot">
        <value encoded="n"/>
    </attrib>
    <workflow-item name="item0" type="end" end-mode="0" comparator="0">
        <in-binding/>
        <out-binding/>
        <position y="10.0" x="1100.0"/>
    </workflow-item>
    <workflow-item name="item1" out-name="item2" type="task" script-module="com.vmware.library.vc.basic/cloneVM" comparator="0">
        <display-name>cloneVM</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.basic").cloneVM(vm,vmFolder,name,powerOn,template,datastore,host,pool,thinProvisioned);
</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm">
                <description>The Source Virtual Machine or Template for the Clone Operation</description>
            </bind>
            <bind name="vmFolder" type="VC:VmFolder" export-name="vmFolder">
                <description>The location of the new virtual machine.</description>
            </bind>
            <bind name="name" type="string" export-name="newVmName">
                <description>The name of the new virtual machine.</description>
            </bind>
            <bind name="powerOn" type="boolean" export-name="powerOn">
                <description>Specifies whether or not the new VirtualMachine should be powered on after creation.</description>
            </bind>
            <bind name="template" type="boolean" export-name="template">
                <description>Specifies whether or not the new virtual machine should be marked as a template.</description>
            </bind>
            <bind name="datastore" type="VC:Datastore" export-name="datastore">
                <description>The datastore where the virtual machine should be located. If not specified, the current datastore is used. </description>
            </bind>
            <bind name="host" type="VC:HostSystem" export-name="host">
                <description>The datastore where the virtual machine should be located. If not specified, the current datastore is used.</description>
            </bind>
            <bind name="pool" type="VC:ResourcePool" export-name="pool">
                <description>The resource pool to which this virtual machine should be attached.</description>
            </bind>
            <bind name="thinProvisioned" type="boolean" export-name="thinProvisioned">
                <description>If true, the VM disk size unused are not reserved on the datastore</description>
            </bind>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="VC:Task" export-name="cloneTask"/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="20.0" x="400.0"/>
    </workflow-item>
    <workflow-item name="item2" out-name="item10" type="task" script-module="com.vmware.library.vc.basic/vim3WaitTaskEnd" comparator="0">
        <display-name>vim3WaitTaskEnd</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.basic").vim3WaitTaskEnd(task,progress,pollRate);
</script>
        <in-binding>
            <bind name="task" type="VC:Task" export-name="cloneTask">
                <description>Task to Wait for</description>
            </bind>
            <bind name="progress" type="boolean" export-name="progress">
                <description>Log progess while waiting for the task</description>
            </bind>
            <bind name="pollRate" type="number" export-name="pollRate">
                <description>Polling rate for the task state [seconds]</description>
            </bind>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="VC:VirtualMachine" export-name="newVM"/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="20.0" x="530.0"/>
    </workflow-item>
    <workflow-item name="item5" out-name="item9" type="task" script-module="com.terasky.utils/getVcVmByUuid" comparator="0">
        <display-name>Get Source Vm by UUID</display-name>
        <script encoded="false">//Auto generated script, cannot be modified !
actionResult = System.getModule("com.terasky.utils").getVcVmByUuid(vmUuid);
</script>
        <in-binding>
            <bind name="vmUuid" type="string" export-name="sourceVmUuid">
                <description></description>
            </bind>
        </in-binding>
        <out-binding>
            <bind name="actionResult" type="VC:VirtualMachine" export-name="vm"/>
        </out-binding>
        <description>Add a note to the workflow schema.</description>
        <position y="20.0" x="140.0"/>
    </workflow-item>
    <workflow-item name="item7" out-name="item8" type="task" prototype-id="sleep" content-mode="x" comparator="0">
        <display-name>Sleep</display-name>
        <script encoded="false">//Auto-generated script
if ( sleepTime !== null )  {
	System.sleep(sleepTime * 1000);
}else  {
	throw "'sleepTime' is NULL"; 
}</script>
        <in-binding>
            <bind name="sleepTime" type="number" export-name="sleepTime">
                <description>Time to sleep in seconds</description>
            </bind>
        </in-binding>
        <out-binding/>
        <description>Sleep a given number of seconds.</description>
        <position y="20.0" x="730.0"/>
    </workflow-item>
    <workflow-item name="item8" out-name="item11" type="link" linked-workflow-id="BD80808080808080808080808080808053C180800122528313869552e41805bb1" comparator="0">
        <display-name>Create a snapshot</display-name>
        <script encoded="false"></script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm">
                <description>Virtual machine of which to create a snapshot</description>
            </bind>
            <bind name="name" type="string" export-name="snapshotName">
                <description>Snapshot name. The name need not be unique for this virtual machine.</description>
            </bind>
            <bind name="description" type="string" export-name="description">
                <description>Snapshot description.</description>
            </bind>
            <bind name="memory" type="boolean" export-name="memory">
                <description>If TRUE, the snapshot includes a dump of the internal state of the virtual machine (a memory dump). </description>
            </bind>
            <bind name="quiesce" type="boolean" export-name="quiesce">
                <description>If TRUE and the virtual machine is powered on when the snapshot is taken, VMware Tools are used to quiesce the file system in the virtual machine.</description>
            </bind>
        </in-binding>
        <out-binding>
            <bind name="snapshot" type="VC:VirtualMachineSnapshot" export-name="snapshot">
                <description>The snapshot created</description>
            </bind>
        </out-binding>
        <description> </description>
        <position y="20.0" x="860.0"/>
    </workflow-item>
    <workflow-item name="item9" out-name="item1" type="task" comparator="0">
        <display-name>Get Resource Pool From Source VM</display-name>
        <script encoded="false">System.debug("Cloning the VM " + vm.name + " now");&#13;
&#13;
// getting the resource pool of the source VM as this is needed for cloning&#13;
pool = vm.resourcePool;</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
        </in-binding>
        <out-binding>
            <bind name="pool" type="VC:ResourcePool" export-name="pool"/>
        </out-binding>
        <description>Simple task with custom script capability.</description>
        <position y="20.0" x="270.0"/>
    </workflow-item>
    <workflow-item name="item10" out-name="item7" type="task" comparator="0">
        <display-name>Logger</display-name>
        <script encoded="false">System.debug("Finished Cloning the vm " + vm.name);&#13;
System.debug("Creating a snapshot for linked clone purposes on the new VM now");</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
        </in-binding>
        <out-binding/>
        <description>Simple task with custom script capability.</description>
        <position y="20.0" x="635.0"/>
    </workflow-item>
    <workflow-item name="item11" out-name="item0" type="task" comparator="0">
        <display-name>Logger</display-name>
        <script encoded="false">System.debug("finished creating the needed snapshot on the vm " + vm.name);</script>
        <in-binding>
            <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
        </in-binding>
        <out-binding/>
        <description>Simple task with custom script capability.</description>
        <position y="20.0" x="975.0"/>
    </workflow-item>
    <presentation/>
</ns2:workflow>
